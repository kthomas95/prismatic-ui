[{"/home/kyleth95/Code/prismatic-ui/packages/storybook/src/display/card.stories.tsx":"1","/home/kyleth95/Code/prismatic-ui/packages/storybook/src/display/display.stories.ts":"2","/home/kyleth95/Code/prismatic-ui/packages/storybook/src/inputs/inputs.stories.ts":"3","/home/kyleth95/Code/prismatic-ui/packages/storybook/src/inputs/button.stories.tsx":"4","/home/kyleth95/Code/prismatic-ui/packages/storybook/src/primatives/layout.stories.tsx":"5","/home/kyleth95/Code/prismatic-ui/packages/storybook/src/primatives/motion-box.stories.tsx":"6","/home/kyleth95/Code/prismatic-ui/packages/storybook/src/display/animated-list-story.tsx":"7","/home/kyleth95/Code/prismatic-ui/packages/storybook/src/display/animated-value-story.tsx":"8","/home/kyleth95/Code/prismatic-ui/packages/storybook/src/display/drawer-story.tsx":"9","/home/kyleth95/Code/prismatic-ui/packages/storybook/src/display/loader-story.tsx":"10","/home/kyleth95/Code/prismatic-ui/packages/storybook/src/display/message-story.tsx":"11","/home/kyleth95/Code/prismatic-ui/packages/storybook/src/display/stat-stories.tsx":"12","/home/kyleth95/Code/prismatic-ui/packages/storybook/src/display/tabs-story.tsx":"13","/home/kyleth95/Code/prismatic-ui/packages/storybook/src/display/hidden-story.tsx":"14","/home/kyleth95/Code/prismatic-ui/packages/storybook/src/display/menu-story.tsx":"15","/home/kyleth95/Code/prismatic-ui/packages/storybook/src/display/badge-story.tsx":"16","/home/kyleth95/Code/prismatic-ui/packages/storybook/src/color-types.tsx":"17","/home/kyleth95/Code/prismatic-ui/packages/storybook/src/primatives/colors.story.tsx":"18","/home/kyleth95/Code/prismatic-ui/packages/storybook/src/primatives/text-story.tsx":"19","/home/kyleth95/Code/prismatic-ui/packages/storybook/src/primatives/theme-story.tsx":"20","/home/kyleth95/Code/prismatic-ui/packages/storybook/src/primatives/box-story.tsx":"21","/home/kyleth95/Code/prismatic-ui/packages/storybook/src/inputs/autocomplete-story.tsx":"22","/home/kyleth95/Code/prismatic-ui/packages/storybook/src/inputs/textfield-story.tsx":"23","/home/kyleth95/Code/prismatic-ui/packages/storybook/src/inputs/checkbox-story.tsx":"24"},{"size":667,"mtime":1607571519194,"results":"25","hashOfConfig":"26"},{"size":509,"mtime":1607571519194,"results":"27","hashOfConfig":"26"},{"size":264,"mtime":1607571519194,"results":"28","hashOfConfig":"26"},{"size":2980,"mtime":1607571519194,"results":"29","hashOfConfig":"26"},{"size":191,"mtime":1607758431000,"results":"30","hashOfConfig":"26"},{"size":3018,"mtime":1607571519198,"results":"31","hashOfConfig":"26"},{"size":1531,"mtime":1607571519194,"results":"32","hashOfConfig":"26"},{"size":500,"mtime":1607571519194,"results":"33","hashOfConfig":"26"},{"size":1897,"mtime":1607571519194,"results":"34","hashOfConfig":"26"},{"size":415,"mtime":1607571519194,"results":"35","hashOfConfig":"26"},{"size":119,"mtime":1607571519194,"results":"36","hashOfConfig":"26"},{"size":107,"mtime":1607571519194,"results":"37","hashOfConfig":"26"},{"size":107,"mtime":1607571519194,"results":"38","hashOfConfig":"26"},{"size":1064,"mtime":1607571519194,"results":"39","hashOfConfig":"26"},{"size":1821,"mtime":1607571519194,"results":"40","hashOfConfig":"26"},{"size":943,"mtime":1607916091499,"results":"41","hashOfConfig":"26"},{"size":480,"mtime":1607571519191,"results":"42","hashOfConfig":"26"},{"size":2147,"mtime":1607913810799,"results":"43","hashOfConfig":"26"},{"size":616,"mtime":1607571519198,"results":"44","hashOfConfig":"26"},{"size":2751,"mtime":1607651548575,"results":"45","hashOfConfig":"26"},{"size":883,"mtime":1607758355023,"results":"46","hashOfConfig":"26"},{"size":4116,"mtime":1607571519194,"results":"47","hashOfConfig":"26"},{"size":541,"mtime":1607571519194,"results":"48","hashOfConfig":"26"},{"size":2534,"mtime":1607913930953,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},"5312wp",{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"53"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"53"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"53"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"53"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"53"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"53"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"53"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"53"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"53"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"53"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"/home/kyleth95/Code/prismatic-ui/packages/storybook/src/display/card.stories.tsx",["113","114","115","116"],"import React from \"react\";\nimport { Card, Box, Grid, Badge } from \"prismatic-ui\";\nimport { colorTypes } from \"color-types\";\n\nconst BasicCard: Card = ({ ...props }) => <Card {...props} />;\n\nexport const Basic = () => (\n    <Grid gridTemplateColumns=\"repeat(4, 1fr)\" gridAutoRows=\"200px\" gridGap={2}>\n        {colorTypes.map((color) => (\n            <Card\n                heading={color[0].toUpperCase() + color.slice(1)}\n                key={color}\n                children={`An example of a ${color} card.`}\n                footer=\"Footer\"\n                variantColor={color}\n            />\n        ))}\n    </Grid>\n);\n\nexport default {\n    title: \"Display/Card\",\n};\n",["117","118"],"/home/kyleth95/Code/prismatic-ui/packages/storybook/src/display/display.stories.ts",["119"],"export { AnimatedListStory } from \"./animated-list-story\";\nexport { BadgeStory } from \"./badge-story\";\nexport { AnimatedValueStory } from \"./animated-value-story\";\nexport { DrawerStory } from \"./drawer-story\";\nexport { LoaderStory } from \"./loader-story\";\nexport { MessageStory } from \"./message-story\";\nexport { StatStory } from \"./stat-stories\";\nexport { TabsStory } from \"./tabs-story\";\nexport { HiddenStory } from \"./hidden-story\";\nexport * from \"./menu-story\";\n\nexport default {\n    title: \"Display\",\n};\n","/home/kyleth95/Code/prismatic-ui/packages/storybook/src/inputs/inputs.stories.ts",["120"],"import { CheckboxStory } from \"./checkbox-story\";\nimport { TextfieldStory } from \"./textfield-story\";\nimport { AutocompleteStory } from \"./autocomplete-story\";\n\nexport { TextfieldStory, CheckboxStory, AutocompleteStory };\n\nexport default {\n    title: \"Inputs\",\n};\n","/home/kyleth95/Code/prismatic-ui/packages/storybook/src/inputs/button.stories.tsx",["121","122","123","124","125","126","127"],"import React from \"react\";\nimport { Button, Grid } from \"prismatic-ui\";\n// import { IconButton } from \"prismatic-ui\";\nimport {\n    FiTrash,\n    FiHome,\n    FiCalendar,\n    FiAlertCircle,\n    FiSmile,\n    FiMenu,\n    FiPlus,\n    FiTrash2,\n} from \"react-icons/fi\";\nimport { colorTypes } from \"../color-types\";\n\nexport default { title: \"Inputs/Buttons\", component: Button };\n\nexport const solid = () => (\n    <>\n        <h4>Solid Buttons</h4>\n        <Grid\n            gridAutoColumns={\"max-content\"}\n            gridAutoFlow=\"column\"\n            alignItems=\"center\"\n            gridGap={2}\n        >\n            {colorTypes.map((color) => (\n                <Button\n                    variantColor={color}\n                    // as=\"a\"\n                    // css={color === \"primary\" ? { color: \"black\" } : {}}\n                >\n                    {color[0].toUpperCase() + color.slice(1)}\n                </Button>\n            ))}\n            <Button variantColor=\"primary\" leftIcon={FiPlus}>\n                Add Item\n            </Button>\n            <Button variantColor=\"error\" rightIcon={FiTrash2}>\n                Delete Item\n            </Button>\n        </Grid>\n    </>\n);\n\nexport const outline = () => (\n    <>\n        <h4>Outline Buttons </h4>\n        <Grid gridAutoColumns={\"max-content\"} gridAutoFlow=\"column\" gridGap={2}>\n            {colorTypes.map((color) => (\n                <Button variantColor={color} variant=\"outline\">\n                    {color[0].toUpperCase() + color.slice(1)}\n                </Button>\n            ))}\n        </Grid>\n    </>\n);\n\nexport const ghost = () => (\n    <>\n        <h4>Ghost Buttons</h4>\n        <Grid gridAutoColumns={\"max-content\"} gridAutoFlow=\"column\" gridGap={2}>\n            {colorTypes.map((color) => (\n                <Button variantColor={color} variant=\"ghost\">\n                    {color[0].toUpperCase() + color.slice(1)}\n                </Button>\n            ))}\n        </Grid>\n    </>\n);\n\n// export const icon = () => (\n//     <>\n//         <h4>Icon Buttons</h4>\n//         <Grid gridGap={2} gridAutoColumns=\"max-content\" gridAutoFlow=\"column\">\n//             <IconButton icon={FiHome} variantColor=\"primary\" />\n//             <IconButton icon={FiCalendar} variantColor=\"secondary\" />\n//             <IconButton icon={FiSmile} variantColor=\"success\" />\n//             <IconButton icon={FiAlertCircle} variantColor=\"warning\" />\n//             <IconButton icon={FiTrash} variantColor=\"error\" />\n//             <IconButton icon={FiPlus} variantColor=\"success\" label=\"Add Card\" />\n//         </Grid>\n//         <br />\n//         <IconButton icon={FiMenu} size=\"2rem\" variantColor=\"primary\" />\n//         <IconButton icon={FiMenu} size=\"4rem\" variantColor=\"text\" />\n//         <IconButton\n//             icon={FiMenu}\n//             size=\"3em\"\n//             variantColor=\"background\"\n//             position=\"fixed\"\n//             bottom={0}\n//             right={0}\n//             m={2}\n//         />\n//     </>\n// );\n","/home/kyleth95/Code/prismatic-ui/packages/storybook/src/primatives/layout.stories.tsx",["128"],"import { box } from \"./box-story\";\nexport * from \"./theme-story\";\nexport * from \"./text-story\";\nexport * from \"./colors.story\";\n\nexport { box };\n\nexport default {\n    title: \"Primatives\",\n};\n","/home/kyleth95/Code/prismatic-ui/packages/storybook/src/primatives/motion-box.stories.tsx",["129","130","131","132"],"import React, { useState } from \"react\";\nimport {\n    Button,\n    Checkbox,\n    MotionBox,\n    Box,\n    Hidden,\n    TextField,\n} from \"prismatic-ui\";\nimport { AnimatePresence, AnimateSharedLayout, motion } from \"framer-motion\";\n\nconst useToggle = (initial: boolean = true) => {\n    const [val, setVal] = useState(initial);\n    return { val, toggle: () => setVal((prev) => !prev) };\n};\n\nconst URL = \"https://pkmn-cards.nyc3.digitaloceanspaces.com/swsh1/swsh1-30.jpg\";\n\nexport const TestStory = () => {\n    const { val, toggle } = useToggle();\n    const [values, setValues] = useState([\"Hello!\"]);\n    const [textVal, setTextVal] = useState(\"\");\n\n    return (\n        <div>\n            <Checkbox\n                variantColor=\"primary\"\n                checked={val}\n                onChange={() => toggle()}\n            >\n                Check\n            </Checkbox>\n            <form\n                onSubmit={(e) => {\n                    e.preventDefault();\n                    setValues((vals) => [...vals, textVal]);\n                    setTextVal(\"\");\n                }}\n            >\n                <TextField\n                    value={textVal}\n                    onChange={(e) => setTextVal(e.target.value)}\n                />\n            </form>\n            <AnimateSharedLayout>\n                <MotionBox\n                    p={2}\n                    mt={2}\n                    borderRadius={4}\n                    // boxShadow={2}\n                    bg=\"primary.main\"\n                    transition={{ easings: \"linear\" }}\n                    layout\n\n                    // animate={{ height: val ? 200 : 100 }}\n                >\n                    {values.map((v, index) => (\n                        <motion.h3\n                            layout\n                            initial={{ opacity: 0 }}\n                            animate={{ opacity: 1 }}\n                            onClick={() =>\n                                setValues((old) => [\n                                    ...old.slice(0, index),\n                                    ...old.slice(index + 1),\n                                ])\n                            }\n                            key={`${v}${index}`}\n                        >\n                            {v}\n                        </motion.h3>\n                    ))}\n                </MotionBox>\n            </AnimateSharedLayout>\n            <Box\n                p={2}\n                display=\"none\"\n                // height={400}\n                position=\"relative\"\n                mt={2}\n                bg=\"secondary.main\"\n            >\n                <Box\n                    as=\"img\"\n                    src={URL}\n                    height=\"100%\"\n                    maxHeight=\"200px\"\n                    m=\"auto\"\n                    _css={{ boxShadow: \"md\" }}\n                    borderRadius=\"4%\"\n                    onClick={() => toggle()}\n                />\n            </Box>\n        </div>\n    );\n};\n\nexport default { title: \"Primatives/Motion Box\" };\n","/home/kyleth95/Code/prismatic-ui/packages/storybook/src/display/animated-list-story.tsx",["133"],"import React, { useState } from \"react\";\n\nimport cardData from \"../card_data.json\";\nimport { AnimatedList, Button, MotionBox } from \"prismatic-ui\";\nimport { shuffle } from \"lodash\";\n\nconst cards = cardData.map((card) => card.node);\n\nconst colors = [\n    \"primary\",\n    \"secondary\",\n    \"error\",\n    \"success\",\n    \"warning\",\n    \"danger\",\n];\n\nconst AnimatedListItem = ({ name, index, ...props }: { name: string }) => (\n    <AnimatedList.Item\n        bg={`${colors[name.charCodeAt(0) % 6]}.main`}\n        color={`${colors[name.charCodeAt(0) % 6]}.text`}\n        m={2}\n        p={3}\n        borderRadius={4}\n        onClick={() => props.toggleItems(props.id)}\n        // {...props}\n    >\n        {name}\n    </AnimatedList.Item>\n);\n\nexport const AnimatedListStory = () => {\n    const [cardList, setCards] = useState(cards);\n    const toggleItems = (toggle: string) => {\n        setCards((old) => old.filter((item) => item.id !== toggle));\n    };\n\n    return (\n        <>\n            <Button onClick={() => setCards((old) => [...shuffle(old)])}>\n                Shuffle\n            </Button>\n            <AnimatedList.Container\n                display=\"grid\"\n                gridTemplateColumns=\"1fr 1fr 1fr\"\n                position=\"absolute\"\n                flexWrap=\"wrap\"\n                items={cardList}\n                itemProps={{ toggleItems }}\n                itemKey={(card, index) => card.id}\n                component={AnimatedListItem}\n            />\n        </>\n    );\n};\n\nAnimatedListStory.storyName = \"Animated List\";\n","/home/kyleth95/Code/prismatic-ui/packages/storybook/src/display/animated-value-story.tsx",[],"/home/kyleth95/Code/prismatic-ui/packages/storybook/src/display/drawer-story.tsx",[],"/home/kyleth95/Code/prismatic-ui/packages/storybook/src/display/loader-story.tsx",[],"/home/kyleth95/Code/prismatic-ui/packages/storybook/src/display/message-story.tsx",[],"/home/kyleth95/Code/prismatic-ui/packages/storybook/src/display/stat-stories.tsx",[],"/home/kyleth95/Code/prismatic-ui/packages/storybook/src/display/tabs-story.tsx",[],"/home/kyleth95/Code/prismatic-ui/packages/storybook/src/display/hidden-story.tsx",[],"/home/kyleth95/Code/prismatic-ui/packages/storybook/src/display/menu-story.tsx",["134","135","136","137","138","139"],"import { AnimatePresence, AnimateSharedLayout, motion } from \"framer-motion\";\nimport {\n    Box,\n    Checkbox,\n    Grid,\n    Menu,\n    MenuCollapse,\n    MenuItem,\n} from \"prismatic-ui\";\nimport React, { useState } from \"react\";\n// import \"./styles.css\";\n\nconst MenuItems = [\n    {\n        name: \"Pokemon\",\n        items: [\"Basic\", \"Stage 1\", \"EX\", \"GX\"],\n        variantColor: \"primary\",\n    },\n    {\n        name: \"Trainers\",\n        items: [\"Supporters\", \"Trainers\", \"Stadiums\"],\n        variantColor: \"success\",\n    },\n    { name: \"Energy\", items: [], variantColor: \"danger\" },\n];\n\nconst MenuStory = () => (\n    <>\n        <Menu\n            maxWidth={300}\n            boxShadow=\"lg\"\n            bg=\"background.light\"\n            color=\"text.main\"\n            maxHeight=\"90vh\"\n            overflowY=\"auto\"\n            borderRadius={8}\n        >\n            {MenuItems.map((item) => (\n                <MenuCollapse\n                    heading={item.name}\n                    key={item.name}\n                    variantColor={item.variantColor}\n                >\n                    <Grid gridTemplateColumns=\"1fr 1fr\">\n                        {item.items.map((subitem) => (\n                            <Checkbox\n                                // initial={{ opacity: 0 }}\n                                // animate={{ opacity: 1 }}\n                                // exit={{ opacity: 0 }}\n                                // layout\n                                p={2}\n                                key={subitem}\n                            >\n                                {subitem}\n                            </Checkbox>\n                        ))}\n                    </Grid>\n                </MenuCollapse>\n            ))}\n        </Menu>\n    </>\n);\n\nexport { MenuStory as Menu };\n// MenuStory.storyName = \"Menu\";\n","/home/kyleth95/Code/prismatic-ui/packages/storybook/src/display/badge-story.tsx",[],"/home/kyleth95/Code/prismatic-ui/packages/storybook/src/color-types.tsx",[],"/home/kyleth95/Code/prismatic-ui/packages/storybook/src/primatives/colors.story.tsx",["140"],"import { colorTypes } from \"color-types\";\nimport { Box, ColorType, COLOR_TYPES, Grid, Checkbox } from \"prismatic-ui\";\nimport { useState } from \"react\";\n\nconst ColorBox = ({\n    color,\n    compact,\n}: {\n    color: ColorType;\n    compact: boolean;\n}) => (\n    <Box\n        bg=\"background.500\"\n        py={2}\n        px={3}\n        boxShadow=\"sm\"\n        borderTopRightRadius={8}\n        borderBottomRightRadius={8}\n        borderLeft=\"solid 4px\"\n        borderColor={`${color}.700`}\n        color={`${color}.500`}\n    >\n        <Box as=\"h3\" ml={1} my={2} letterSpacing=\"-.025em\">\n            {color[0].toUpperCase() + color.slice(1)}\n        </Box>\n        <Grid\n            my={2}\n            display=\"inline-grid\"\n            gridGap={compact ? 0 : 1}\n            gridAutoFlow=\"column\"\n            gridAutoRows=\"2em\"\n            gridAutoColumns=\"2em\"\n            borderRadius={compact ? 4 : 0}\n            overflow={compact ? \"hidden\" : \"unset\"}\n        >\n            {([100, 300, 500, 700, 900] as const).map((scale) => (\n                <Box\n                    key={scale}\n                    bg={`${color}.${scale}` as const}\n                    borderRadius={compact ? 0 : 4}\n                    boxShadow={compact ? \"unset\" : \"sm\"}\n                />\n            ))}\n        </Grid>\n    </Box>\n);\n\nconst ColorView = () => {\n    const [compact, setCompact] = useState(true);\n    return (\n        <>\n            <Checkbox\n                mb={2}\n                checked={compact}\n                variantColor=\"primary\"\n                onChange={() => setCompact((prev) => !prev)}\n            >\n                Compact\n            </Checkbox>\n            <Grid gridTemplateColumns={[\"1fr\", \"1fr 1fr\"]} gridGap={3}>\n                {COLOR_TYPES.map((color) => (\n                    <ColorBox key={color} color={color} compact={compact} />\n                ))}\n            </Grid>\n        </>\n    );\n};\n\nexport const colors = () => {\n    return <ColorView />;\n};\n\n// Text color contrast with main, light, very dark/light variant of main\n\n// Look more into Linaria/something else. CSS vars fine.\n\n// General UI: Less is more (use on main pkmn site)\n","/home/kyleth95/Code/prismatic-ui/packages/storybook/src/primatives/text-story.tsx",[],"/home/kyleth95/Code/prismatic-ui/packages/storybook/src/primatives/theme-story.tsx",["141","142"],"import React, { useContext } from \"react\";\nimport { ThemeConsumer, Box, Grid, Stat } from \"prismatic-ui\";\nimport { colorTypes } from \"color-types\";\n\nimport chroma from \"chroma-js\";\nimport { FiAlertOctagon } from \"react-icons/fi\";\n\nconst ThemeCheck = ({ colors, color, bg, mixed }) => {\n    const mixedBg = mixed\n        ? chroma\n            .average(\n                [chroma(colors.background.main), chroma(bg.color)],\n                \"lab\",\n                [0.58, 0.42]\n            )\n            .hex()\n        : bg.color;\n\n    const contrast = chroma.contrast(mixedBg, color.color);\n\n    return (\n        <Box p={1} bg={bg.color} color={color.color}>\n            <Box display=\"inline-block\" mr={2}>\n                <Stat label=\"Background\" value={bg.label} />\n            </Box>\n            <Box display=\"inline-block\" ml={2}>\n                <Stat label=\"Color\" value={color.label} />\n            </Box>\n            <Box bg={mixedBg}>\n                <Stat\n                    label={\n                        <>\n                            Contrast\n                            {contrast < 5 && <Box as={FiAlertOctagon} />}\n                        </>\n                    }\n                    value={contrast.toFixed(2)}\n                />\n            </Box>\n        </Box>\n    );\n};\n\nconst ThemeBox = ({ themeName, colors }) => {\n    const themeColor = colors[themeName];\n    const ThemeChecks = [\n        {\n            bg: { label: \"main\", color: colors[themeName].main },\n            color: { label: \"text\", color: colors[themeName].text },\n            mixed: false,\n        },\n        {\n            bg: { label: \"alpha.dark\", color: colors[themeName].alpha.dark },\n            color: { label: \"text.main\", color: colors.text.main },\n            mixed: true,\n        },\n    ];\n\n    return (\n        <Box boxShadow={1} p={0} borderRadius={8} textAlign=\"center\">\n            <h4>{themeName[0].toUpperCase() + themeName.slice(1)}</h4>\n            {ThemeChecks.map((check) => (\n                <ThemeCheck\n                    key={check.bg.label + check.color.label}\n                    {...check}\n                    colors={colors}\n                />\n            ))}\n        </Box>\n    );\n};\n\nconst CheckTheme = ({ theme }: { theme: any }) => (\n    <Grid\n        gridTemplateColumns=\"repeat(auto-fill, minmax(200px, 1fr))\"\n        gridGap={3}\n    >\n        {colorTypes.filter((color) => theme.colors[color]?.alpha).map((colorType) => (\n            <ThemeBox\n                themeName={colorType}\n                colors={theme.colors}\n                key={colorType}\n            />\n        ))}\n    </Grid>\n);\n\nexport const ThemeStory = () => {\n    return (\n        <ThemeConsumer>{(theme) => <CheckTheme theme={theme} />}</ThemeConsumer>\n    );\n};\n","/home/kyleth95/Code/prismatic-ui/packages/storybook/src/primatives/box-story.tsx",["143"],"import React from \"react\";\nimport { Box, PseudoBox } from \"prismatic-ui\";\n\nexport default {\n    title: \"Layout\",\n    id: \"Layout\",\n    // id: \"1\"\n};\n\nconst StyledBox: Box = ({ ...props }) => <Box {...props} />;\n\nStyledBox.defaultProps = {\n    bg: \"primary.main\",\n};\n\nexport const box = () => (\n    <>\n        <h2>Box!</h2>\n        <br />\n        <Box bg=\"primary.main\" boxShadow={\"lg\"} p={2} m={3}>\n            test\n        </Box>\n        <StyledBox>This Is A Box</StyledBox>\n        <br />\n        <StyledBox>This is a box.</StyledBox>\n    </>\n);\n\nexport const pseudoBox = () => (\n    <>\n        <PseudoBox\n            p={2}\n            borderRadius={4}\n            color=\"primary.text\"\n            bg=\"primary.main\"\n            _css={{ bg: \"primary.light\", fontSize: \"sm\" }}\n            _hover={{ bg: \"secondary.light\" }}\n        >\n            Test\n        </PseudoBox>\n    </>\n);\n","/home/kyleth95/Code/prismatic-ui/packages/storybook/src/inputs/autocomplete-story.tsx",["144","145"],"import React, { useState, useEffect } from \"react\";\nimport {\n    Autocomplete,\n    Grid,\n    Button,\n    Box,\n    AnimatedListItem,\n    AnimatedListContainer,\n} from \"prismatic-ui\";\nimport cardData from \"../card_data.json\";\n\nconst AnimatedCard = ({ name, count }) => (\n    <AnimatedListItem>\n        {name} ({count})\n    </AnimatedListItem>\n);\n\nexport const AutocompleteStory = () => {\n    const [text, setText] = useState(\"\");\n    const [cards, setCards] = useState(cardData.map((edge) => edge.node));\n    useEffect(\n        () =>\n            setCards(\n                cardData\n                    .map((edge) => edge.node)\n                    .filter((card) =>\n                        card.name.toLowerCase().startsWith(text.toLowerCase())\n                    )\n            ),\n        [text]\n    );\n    const [text2, setText2] = useState(\"\");\n    const [selected, setSelected] = useState<any[]>([]);\n    const removeCard = (id: string) =>\n        setSelected([...selected.filter((card) => card.id !== id)]);\n    return (\n        <div>\n            <h3>Autocomplete {text}</h3>\n            <Autocomplete\n                wrapperProps={{ mb: 4 }}\n                height={212}\n                inputHeight={32}\n                open={text !== \"\" && cards.length > 0}\n                {...{ value: text, setText }}\n            >\n                <Grid\n                    height={\"100%\"}\n                    overflowX=\"auto\"\n                    gridGap={3}\n                    p={1}\n                    gridTemplateRows=\"100%\"\n                    gridAutoColumns=\"1fr\"\n                    gridAutoFlow=\"column\"\n                >\n                    {cards.map((card) => (\n                        <Button\n                            key={card.id}\n                            minWidth={400}\n                            p={2}\n                            onClick={() => {\n                                // console.log(\"hi\");\n                                let found = selected.find(\n                                    (currentCard) => currentCard.id === card.id\n                                );\n                                if (found) {\n                                    found.count += 1;\n                                } else {\n                                    setSelected(\n                                        [\n                                            ...selected,\n                                            { ...card, count: 1 },\n                                        ].sort(\n                                            (a, b) =>\n                                                parseInt(a.number.slice(2)) -\n                                                parseInt(b.number.slice(2))\n                                        )\n                                    );\n                                }\n                                setText(\"\");\n                            }}\n                            boxShadow={2}\n                            variantColor={card.types[0]}\n                        >\n                            <Box\n                                as=\"img\"\n                                mr=\"auto\"\n                                maxHeight=\"100%\"\n                                _css={{\n                                    objectFit: \"scale-down\",\n                                    objectPosition: \"left\",\n                                }}\n                                src={`https://pkmn-cards.nyc3.cdn.digitaloceanspaces.com/${card.setCode}/${card.id}.jpg`}\n                                width=\"40%\"\n                            />\n                            {card.name}\n                        </Button>\n                    ))}\n                </Grid>\n            </Autocomplete>\n            <Box maxWidth={400}>\n                <h2>Pokemon</h2>\n\n                <AnimatedListContainer\n                    items={selected}\n                    itemKey={(card) => card.id}\n                    itemProps={{ removeCard }}\n                    component={AnimatedCard}\n                />\n            </Box>\n        </div>\n    );\n};\n\nAutocompleteStory.storyName = \"Autocomplete\";\n",["146","147"],"/home/kyleth95/Code/prismatic-ui/packages/storybook/src/inputs/textfield-story.tsx",["148"],"import React, { useState } from \"react\";\nimport { TextField, Stat, Box, Card } from \"prismatic-ui\";\n\nexport const TextfieldStory = () => {\n    const [text, setText] = useState(\"\");\n\n    return (\n        <div>\n            <TextField onChange={(e) => setText(e.currentTarget.value)} />\n            <br />\n            <Card display=\"inline-block\" as=\"p\" p={2} fontSize=\".8em\">\n                <Stat label=\"Current Text\" value={text === \"\" ? `\"\"` : text} />\n            </Card>\n        </div>\n    );\n};\n\nTextfieldStory.storyName = \"Text Field\";\n","/home/kyleth95/Code/prismatic-ui/packages/storybook/src/inputs/checkbox-story.tsx",[],{"ruleId":"149","severity":1,"message":"150","line":2,"column":16,"nodeType":"151","messageId":"152","endLine":2,"endColumn":19},{"ruleId":"149","severity":1,"message":"153","line":2,"column":27,"nodeType":"151","messageId":"152","endLine":2,"endColumn":32},{"ruleId":"149","severity":1,"message":"154","line":5,"column":7,"nodeType":"151","messageId":"152","endLine":5,"endColumn":22},{"ruleId":"155","severity":1,"message":"156","line":21,"column":1,"nodeType":"157","endLine":23,"endColumn":3},{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"155","severity":1,"message":"156","line":12,"column":1,"nodeType":"157","endLine":14,"endColumn":3},{"ruleId":"155","severity":1,"message":"156","line":7,"column":1,"nodeType":"157","endLine":9,"endColumn":3},{"ruleId":"149","severity":1,"message":"162","line":5,"column":5,"nodeType":"151","messageId":"152","endLine":5,"endColumn":12},{"ruleId":"149","severity":1,"message":"163","line":6,"column":5,"nodeType":"151","messageId":"152","endLine":6,"endColumn":11},{"ruleId":"149","severity":1,"message":"164","line":7,"column":5,"nodeType":"151","messageId":"152","endLine":7,"endColumn":15},{"ruleId":"149","severity":1,"message":"165","line":8,"column":5,"nodeType":"151","messageId":"152","endLine":8,"endColumn":18},{"ruleId":"149","severity":1,"message":"166","line":9,"column":5,"nodeType":"151","messageId":"152","endLine":9,"endColumn":12},{"ruleId":"149","severity":1,"message":"167","line":10,"column":5,"nodeType":"151","messageId":"152","endLine":10,"endColumn":11},{"ruleId":"155","severity":1,"message":"156","line":16,"column":1,"nodeType":"157","endLine":16,"endColumn":63},{"ruleId":"155","severity":1,"message":"156","line":8,"column":1,"nodeType":"157","endLine":10,"endColumn":3},{"ruleId":"149","severity":1,"message":"168","line":3,"column":5,"nodeType":"151","messageId":"152","endLine":3,"endColumn":11},{"ruleId":"149","severity":1,"message":"169","line":7,"column":5,"nodeType":"151","messageId":"152","endLine":7,"endColumn":11},{"ruleId":"149","severity":1,"message":"170","line":10,"column":10,"nodeType":"151","messageId":"152","endLine":10,"endColumn":25},{"ruleId":"155","severity":1,"message":"156","line":98,"column":1,"nodeType":"157","endLine":98,"endColumn":51},{"ruleId":"149","severity":1,"message":"171","line":4,"column":32,"nodeType":"151","messageId":"152","endLine":4,"endColumn":41},{"ruleId":"149","severity":1,"message":"170","line":1,"column":10,"nodeType":"151","messageId":"152","endLine":1,"endColumn":25},{"ruleId":"149","severity":1,"message":"172","line":1,"column":27,"nodeType":"151","messageId":"152","endLine":1,"endColumn":46},{"ruleId":"149","severity":1,"message":"173","line":1,"column":48,"nodeType":"151","messageId":"152","endLine":1,"endColumn":54},{"ruleId":"149","severity":1,"message":"150","line":3,"column":5,"nodeType":"151","messageId":"152","endLine":3,"endColumn":8},{"ruleId":"149","severity":1,"message":"174","line":8,"column":5,"nodeType":"151","messageId":"152","endLine":8,"endColumn":13},{"ruleId":"149","severity":1,"message":"175","line":10,"column":17,"nodeType":"151","messageId":"152","endLine":10,"endColumn":25},{"ruleId":"149","severity":1,"message":"176","line":1,"column":10,"nodeType":"151","messageId":"152","endLine":1,"endColumn":20},{"ruleId":"149","severity":1,"message":"177","line":1,"column":17,"nodeType":"151","messageId":"152","endLine":1,"endColumn":27},{"ruleId":"149","severity":1,"message":"178","line":45,"column":11,"nodeType":"151","messageId":"152","endLine":45,"endColumn":21},{"ruleId":"155","severity":1,"message":"156","line":4,"column":1,"nodeType":"157","endLine":8,"endColumn":3},{"ruleId":"149","severity":1,"message":"179","line":32,"column":12,"nodeType":"151","messageId":"152","endLine":32,"endColumn":17},{"ruleId":"149","severity":1,"message":"180","line":32,"column":19,"nodeType":"151","messageId":"152","endLine":32,"endColumn":27},{"ruleId":"158","replacedBy":"181"},{"ruleId":"160","replacedBy":"182"},{"ruleId":"149","severity":1,"message":"150","line":2,"column":27,"nodeType":"151","messageId":"152","endLine":2,"endColumn":30},"@typescript-eslint/no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","'Badge' is defined but never used.","'BasicCard' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-native-reassign",["183"],"no-negated-in-lhs",["184"],"'FiTrash' is defined but never used.","'FiHome' is defined but never used.","'FiCalendar' is defined but never used.","'FiAlertCircle' is defined but never used.","'FiSmile' is defined but never used.","'FiMenu' is defined but never used.","'Button' is defined but never used.","'Hidden' is defined but never used.","'AnimatePresence' is defined but never used.","'MotionBox' is defined but never used.","'AnimateSharedLayout' is defined but never used.","'motion' is defined but never used.","'MenuItem' is defined but never used.","'useState' is defined but never used.","'colorTypes' is defined but never used.","'useContext' is defined but never used.","'themeColor' is assigned a value but never used.","'text2' is assigned a value but never used.","'setText2' is assigned a value but never used.",["183"],["184"],"no-global-assign","no-unsafe-negation"]